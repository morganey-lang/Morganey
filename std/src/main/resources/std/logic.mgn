load std.arithmetic

def true := \a.b. a
def false := \a.b. b

def if := \e.t.f. e t f
def else := \a.a

def and := \p.q. p q p
def or  := \p.q. p p p
def not := \p. p false true

def iszero := \n. n (\x. false) true

// less or equals
def le := \m.n. iszero (minus m n)

// less than
def lt := \m.n. and (le m n) (not (eq m n))

// greater or equals
def ge := \m.n. le n m

// greater than
def gt := \m.n. and (ge m n) (not (eq m n))

// equals
def eq := \m.n. and (le m n) (le n m)

// not equals
def ne := \m.n. not (eq m n)
