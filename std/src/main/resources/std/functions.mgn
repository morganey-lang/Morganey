load std.list

def id := \x. x
def flip := \f.x.y. f y x

def andThen := \f.g.x. g (f x)
def compose := \f.g.x. f (g x)

/* Applies `f` `n` times to `x`
 */
def applyN := \f.n.x. foldl (\acc.ele. ele acc) x (replicate n f)

def Y := \f. (\x. f (x x)) (\x. f (x x))
